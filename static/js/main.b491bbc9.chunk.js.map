{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b491bbc9.chunk.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/About\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n                <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n              />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n              </div>\r\n             \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string ,\r\n    aboutText: PropTypes.string\r\n} \r\n\r\n// Navbar.defaultProps = {\r\n//     title: 'Set title here',\r\n//     aboutText: 'About'\r\n//   };","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Cleared Text!\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Changed\");\r\n    setText(event.target.value);\r\n        };\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed!\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  // setText(event.target.value);\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 \" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 \" onClick={handleClearClick}>\r\n          Clear text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 \" onClick={handleCopy}>\r\n          Copy text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 \" onClick={handleExtraSpaces}>\r\n          Removed Extraspaces\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h1>Your Text Summary</h1>\r\n        <p>\r\n          {text.split(\" \").length-1} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import About from './components/About';\n//  import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('dark');  // Wether Dark MOde is Enable or not\n  const [alert, setAlert] = useState(null);\n\nconst showAlert = (message,type)=>{\n  setAlert({\n    msg: message,\n    type:type\n  })  \n  setTimeout(()=>{\n    setAlert(null);\n  },  1500); \n}\n\n  const toggleMode=()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\" Dark mode as been enabled\",\"success\");\n      document.title='Textutils - Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\" Light mode as been enabled\",\"success\");\n      document.title='Textutils - Light Mode';\n    }\n  }\n  return (\n   <>\n    {/* <Navbar title=\"TextUtils2\" aboutText=\"About Textutils\" /> */}\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}  />\n    <Alert alert={alert} / >\n    <div className=\"container my-3 \">\n      {/* <Switch>\n         <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n          {/* </Route>\n    </Switch> */}\n    </div>\n    {/* </Router> */}\n  \n    </>\n  );\n}\n  \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}